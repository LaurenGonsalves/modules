
nextflow_process {

    name "Test Process: KNEADDATA_KNEADDATA"
    script "../main.nf"
    process "KNEADDATA_KNEADDATA"

    tag "modules"
    tag "modules_local"
    tag "kneaddata"
    tag "kneaddata/kneaddata"

    setup {
        run("KNEADDATA_DATABASE") {
            script "../../database/main.nf"
        }
    }

    test("homo_sapiens - illumina - paired_end_fastq_gz") {

        when {
            params {
                max_cpus = 1
            }
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test' ],
                        [
                            file(params.test_data['sarscov2']['illumina']['test_1_fastq_gz'], checkIfExists: true),
                            file(params.test_data['sarscov2']['illumina']['test_2_fastq_gz'], checkIfExists: true)
                        ]
                    ]
                )
                input[1] = KNEADDATA_DATABASE.out.kneaddata_db
                """
            }
        }


        then {
            assertAll (
                { assert process.success },
                { assert snapshot(
                    process.out.preprocessed_reads,
                    process.out.versions
                    ).match()
                },
                { assert path(process.out.kneaddata_log[0][1]).text.contains("kneaddata.knead_data - INFO: Running kneaddata v0.12.0") }
            )
        }
    }

    test("homo_sapiens - illumina - paired_end_fastq_gz - stub") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of( [ [ id: 'test' ], [], [] ] )
                input[1] = []
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}