nextflow_process {

    name "Test Process: KNEADDATA_READCOUNTS"
    script "../main.nf"
    process "KNEADDATA_READCOUNTS"

    tag "modules"
    tag "modules_local"
    tag "kneaddata"
    tag "kneaddata/readcounts"

    test("kneaddata.log") {

        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test1' ],
                        file( "projectDir/assets/test-datasets/kneaddata/kneaddata1.log", checkifExists:true )
                    ],
                    [
                        [ id: 'test2' ],
                        file( "projectDir/assets/test-datasets/kneaddata/kneaddata2.log", checkifExists:true )
                    ],
                )
                .map { [ [ id:'all_samples' ], it[1] ] }
                .groupTuple( sort: 'deep' )
                """
            }
        }


        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test(" kneaddata.log - stub ") {

        options "-stub"

        when {
            process {
                """
                input[0] = Channel.of(
                    [
                        [ id: 'test1' ],
                        file( "projectDir/assets/test-datasets/kneaddata/kneaddata1.log", checkifExists:true )
                    ],
                    [
                        [ id: 'test2' ],
                        file( "projectDir/assets/test-datasets/kneaddata/kneaddata2.log", checkifExists:true )
                    ],
                )
                .map { [ [ id:'all_samples' ], it[1] ] }
                .groupTuple( sort: 'deep' )
                """
            }
        }

        then {
            assertAll (
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}
